{"ast":null,"code":"var _jsxFileName = \"/Users/Sami/newRex/RexDeus/src/components/Inventory.js\";\nimport React from \"react\";\nimport fantasyImg from \"./fantasy.png\";\nimport grokImg from \"./grok.png\";\nimport soldierImg from \"./soldier.png\";\n\n// Données pour les personnages\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst charactersData = [{\n  id: 1,\n  name: \"Fantasy\",\n  image: fantasyImg,\n  available: true\n}, {\n  id: 2,\n  name: \"Grok\",\n  image: grokImg,\n  available: true\n}, {\n  id: 3,\n  name: \"Soldier\",\n  image: soldierImg,\n  available: true\n}];\nfunction CharacterCatalog() {\n  // Style du conteneur principal : occupe 90% de la largeur de la page et est centré\n  const containerStyle = {\n    width: \"90%\",\n    margin: \"0 auto\",\n    padding: \"20px\"\n  };\n\n  // Style de la grille : 3 cards par ligne avec un espacement régulier\n  const gridStyle = {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(3, 1fr)\",\n    gap: \"20px\",\n    marginTop: \"20px\"\n  };\n\n  // Style de la card : dimensions fixes et design uniforme\n  const cardStyle = {\n    backgroundColor: \"#f9f9f9\",\n    borderRadius: \"8px\",\n    overflow: \"hidden\",\n    boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.1)\",\n    width: \"100%\",\n    height: \"200px\",\n    // Hauteur fixe pour toutes les cards\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  };\n\n  // Style de l'image pour qu'elle remplisse la card tout en conservant ses proportions\n  const imageStyle = {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"cover\",\n    display: \"block\"\n  };\n\n  // Style pour le nom du personnage affiché en dessous de la card\n  const nameStyle = {\n    marginTop: \"10px\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Catalogue des Personnages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gridStyle,\n      children: charactersData.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: cardStyle,\n          children: character.available ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: character.image,\n            alt: character.name,\n            style: imageStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this) :\n          /*#__PURE__*/\n          // Si le personnage n'est pas disponible, tu peux afficher un bouton ou un message\n          _jsxDEV(\"button\", {\n            style: {\n              padding: \"8px 16px\",\n              cursor: \"pointer\"\n            },\n            children: \"Ajouter le personnage...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: nameStyle,\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, character.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_c = CharacterCatalog;\nexport default CharacterCatalog;\nvar _c;\n$RefreshReg$(_c, \"CharacterCatalog\");","map":{"version":3,"names":["React","fantasyImg","grokImg","soldierImg","jsxDEV","_jsxDEV","charactersData","id","name","image","available","CharacterCatalog","containerStyle","width","margin","padding","gridStyle","display","gridTemplateColumns","gap","marginTop","cardStyle","backgroundColor","borderRadius","overflow","boxShadow","height","alignItems","justifyContent","imageStyle","objectFit","nameStyle","fontSize","fontWeight","textAlign","style","children","fileName","_jsxFileName","lineNumber","columnNumber","map","character","src","alt","cursor","_c","$RefreshReg$"],"sources":["/Users/Sami/newRex/RexDeus/src/components/Inventory.js"],"sourcesContent":["import React from \"react\";\nimport fantasyImg from \"./fantasy.png\";\nimport grokImg from \"./grok.png\";\nimport soldierImg from \"./soldier.png\";\n\n// Données pour les personnages\nconst charactersData = [\n  {\n    id: 1,\n    name: \"Fantasy\",\n    image: fantasyImg,\n    available: true,\n  },\n  {\n    id: 2,\n    name: \"Grok\",\n    image: grokImg,\n    available: true,\n  },\n  {\n    id: 3,\n    name: \"Soldier\",\n    image: soldierImg,\n    available: true,\n  },\n];\n\nfunction CharacterCatalog() {\n  // Style du conteneur principal : occupe 90% de la largeur de la page et est centré\n  const containerStyle = {\n    width: \"90%\",\n    margin: \"0 auto\",\n    padding: \"20px\",\n  };\n\n  // Style de la grille : 3 cards par ligne avec un espacement régulier\n  const gridStyle = {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(3, 1fr)\",\n    gap: \"20px\",\n    marginTop: \"20px\",\n  };\n\n  // Style de la card : dimensions fixes et design uniforme\n  const cardStyle = {\n    backgroundColor: \"#f9f9f9\",\n    borderRadius: \"8px\",\n    overflow: \"hidden\",\n    boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.1)\",\n    width: \"100%\",\n    height: \"200px\", // Hauteur fixe pour toutes les cards\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  };\n\n  // Style de l'image pour qu'elle remplisse la card tout en conservant ses proportions\n  const imageStyle = {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"cover\",\n    display: \"block\",\n  };\n\n  // Style pour le nom du personnage affiché en dessous de la card\n  const nameStyle = {\n    marginTop: \"10px\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  };\n\n  return (\n    <div style={containerStyle}>\n      <h1 style={{ textAlign: \"center\" }}>Catalogue des Personnages</h1>\n      <div style={gridStyle}>\n        {charactersData.map((character) => (\n          <div key={character.id} style={{ textAlign: \"center\" }}>\n            <div style={cardStyle}>\n              {character.available ? (\n                <img\n                  src={character.image}\n                  alt={character.name}\n                  style={imageStyle}\n                />\n              ) : (\n                // Si le personnage n'est pas disponible, tu peux afficher un bouton ou un message\n                <button style={{ padding: \"8px 16px\", cursor: \"pointer\" }}>\n                  Ajouter le personnage...\n                </button>\n              )}\n            </div>\n            <div style={nameStyle}>{character.name}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CharacterCatalog;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}